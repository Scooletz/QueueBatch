[assembly: Microsoft.Azure.WebJobs.Hosting.WebJobsStartupAttribute(typeof(QueueBatch.Impl.QueueBatchStartup), null)]
[assembly: System.Runtime.CompilerServices.InternalsVisibleToAttribute("QueueBatch.Benchmarks")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleToAttribute("QueueBatch.Tests")]
[assembly: System.Runtime.Versioning.TargetFrameworkAttribute(".NETStandard,Version=v2.0", FrameworkDisplayName="")]
namespace QueueBatch
{
    public interface IMessageBatch
    {
        System.Collections.Generic.IEnumerable<QueueBatch.Message> Messages { get; }
        void MarkAllAsProcessed();
        void MarkAsProcessed(QueueBatch.Message message);
    }
    public struct Message
    {
        public readonly string Id;
        public readonly System.Memory<byte> Payload;
        public Message(string id, System.Memory<byte> payload) { }
    }
    public class static QueueBatchExtensionConfigExtensions
    {
        public static void AddQueueBatch(this Microsoft.Azure.WebJobs.IWebJobsBuilder builder) { }
    }
    [Microsoft.Azure.WebJobs.Description.BindingAttribute()]
    [System.AttributeUsageAttribute(System.AttributeTargets.Parameter | System.AttributeTargets.All)]
    [System.Diagnostics.DebuggerDisplayAttribute("{QueueName,nq}")]
    public class QueueBatchTriggerAttribute : System.Attribute
    {
        public QueueBatchTriggerAttribute(string queueName) { }
        public string Connection { get; set; }
        public int MaxBackOffInSeconds { get; set; }
        public int ParallelGets { get; set; }
        public string QueueName { get; }
        public bool RunWithEmptyBatch { get; set; }
        public bool SuccessOrFailAsBatch { get; set; }
        public bool UseFasterQueues { get; set; }
    }
}
namespace QueueBatch.Impl
{
    public class QueueBatchStartup : Microsoft.Azure.WebJobs.Hosting.IWebJobsStartup
    {
        public QueueBatchStartup() { }
        public void Configure(Microsoft.Azure.WebJobs.IWebJobsBuilder builder) { }
    }
}